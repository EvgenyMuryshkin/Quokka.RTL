<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Quokka.RTL</name>
    </assembly>
    <members>
        <member name="M:Quokka.RTL.RTLBitArray.#ctor">
            <summary>
            Empty constructor, defaults to unsigned bit
            </summary>
        </member>
        <member name="M:Quokka.RTL.DefaultRTLCombinationalModule`1.OnRelatedObjectCreating(System.Object)">
            <summary>
            Method is called every time a new object inside module is created
            E.g. state, inputs, pipeilne stages etc
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Quokka.RTL.DefaultRTLSynchronousModule`2">
            <summary>
            Base class for hardware state machine module, will be in toolkit
            </summary>
            <typeparam name="TInput"></typeparam>
            <typeparam name="TState"></typeparam>
        </member>
        <member name="P:Quokka.RTL.IRTLPipelineControlSignals.PipelineStalled">
            <summary>
            Flag indicates that whole pipeline has stalled
            </summary>
        </member>
        <member name="P:Quokka.RTL.IRTLPipelinePreviewSignals.PipelineWillStall">
            <summary>
            Flag indicates that pipeline will stall during current clock cycle
            </summary>
        </member>
        <member name="P:Quokka.RTL.IRTLPipelineStageControlSignals.StageStalled">
            <summary>
            Flag indicates that current stage has stalled
            </summary>
        </member>
        <member name="P:Quokka.RTL.IRTLPipelineStagePreviewSignals.StageWillStall">
            <summary>
            Flag indicates that stage will stall during current clock cycle
            </summary>
        </member>
        <member name="P:Quokka.RTL.IRTLPipelineStageRequestSignals.StallPipeline">
            <summary>
            Flag indicates that whole pipeline needs to stall 
            </summary>
        </member>
        <member name="P:Quokka.RTL.IRTLPipelineStageRequestSignals.StallSelf">
            <summary>
            Flag indicates that current stage needs to stall
            All previous stages will also stall 
            All subsequent stages will continue to push data through
            </summary>
        </member>
        <member name="P:Quokka.RTL.IRTLPipelineStageRequestSignals.StallPrev">
            <summary>
            Flag indicates that previous stages need to stall
            Current stage will continue to work
            All subsequent stages will continue to push data through
            </summary>
        </member>
        <member name="P:Quokka.RTL.Verilog.vlgAbstractCollection.Children">
             <summary>
             vlgAggregateExpression
            
             vlgAssign
            
             vlgAssignExpression
            
             vlgAttribute
            
             vlgBinaryValueExpression
            
             vlgCase
            
             vlgCaseDefault
            
             vlgCaseStatement
            
             vlgCombBlock
            
             vlgComment
            
             vlgCompareExpression
            
             vlgConditionalStatement
            
             vlgCustomDeclaration
            
             vlgCustomModulePortDeclaration
            
             vlgFile
            
             vlgForLoop
            
             vlgGenerate
            
             vlgGenericBlock
            
             vlgGenvar
            
             vlgIdentifier
            
             vlgIdentifierExpression
            
             vlgIf
            
             vlgInitial
            
             vlgIterator
            
             vlgLocalParamNameBinaryValue
            
             vlgLocalParamNameExplicitValue
            
             vlgLogicExpression
            
             vlgLogicSignal
            
             vlgMathExpression
            
             vlgMemoryBlock
            
             vlgModule
            
             vlgModuleImplementation
            
             vlgModuleImplementationBlock
            
             vlgModuleInstance
            
             vlgModuleInstanceNamedPortMapping
            
             vlgModuleInstanceParameter
            
             vlgModuleInstanceParameters
            
             vlgModuleInstancePortMappings
            
             vlgModuleInstanceSimplePortMapping
            
             vlgModuleInterface
            
             vlgModuleParameterDeclaration
            
             vlgModuleParameters
            
             vlgPlaceholderModulePort
            
             vlgProcedureCall
            
             vlgProcedureCallExpression
            
             vlgRange
            
             vlgShiftExpression
            
             vlgSimpleForLoop
            
             vlgSizedAggregateExpression
            
             vlgStandardModulePortDeclaration
            
             vlgStandardModulePortImplementation
            
             vlgSyncBlock
            
             vlgSyncBlockSensitivityItem
            
             vlgTernaryExpression
            
             vlgText
            
             vlgUnaryExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAbstractCollection.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgAbstractCollection">
            <summary>
            from vlgInitial
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.Verilog.vlgIdentifier,Quokka.RTL.Verilog.vlgAssignType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Expression"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vlgBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgCompareType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.Verilog.vlgIdentifier)">
            <summary>
            from vlgIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgLogicType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgMathType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.Verilog.vlgProcedureCall)">
            <summary>
            from vlgProcedureCallExpression
            </summary>
            <param name="Call"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgShiftType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgExpression})">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
            <param name="Expressions"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(System.Int32)">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAggregateExpression.#ctor(Quokka.RTL.Verilog.vlgUnaryType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="P:Quokka.RTL.Verilog.vlgAggregateExpression.Expressions">
             <summary>
             vlgAggregateExpression
            
             vlgAssignExpression
            
             vlgBinaryValueExpression
            
             vlgCompareExpression
            
             vlgIdentifierExpression
            
             vlgLogicExpression
            
             vlgMathExpression
            
             vlgProcedureCallExpression
            
             vlgShiftExpression
            
             vlgSizedAggregateExpression
            
             vlgTernaryExpression
            
             vlgUnaryExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgAssign.op_Implicit(Quokka.RTL.Verilog.vlgAssignExpression)~Quokka.RTL.Verilog.vlgAssign">
            <summary>
            from vlgAssign
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgBinaryValueExpression.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.Verilog.vlgBinaryValueExpression">
            <summary>
            from vlgBinaryValueExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgExpression})">
            <summary>
            from vlgAggregateExpression
            </summary>
            <param name="Expressions"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgIdentifier,Quokka.RTL.Verilog.vlgAssignType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Expression"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vlgBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgCompareType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgIdentifier)">
            <summary>
            from vlgIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgLogicType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgMathType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgProcedureCall)">
            <summary>
            from vlgProcedureCallExpression
            </summary>
            <param name="Call"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgShiftType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgExpression})">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
            <param name="Expressions"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(System.Int32)">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgTernaryExpression
            </summary>
            <param name="Condition"></param>
            <param name="Lhs"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.#ctor(Quokka.RTL.Verilog.vlgUnaryType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgAggregateExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgAssignExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgBinaryValueExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgCompareExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgIdentifierExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgLogicExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgMathExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCallExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCall)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgShiftExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgSizedAggregateExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(System.Int32)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgTernaryExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCase.op_Implicit(Quokka.RTL.Verilog.vlgUnaryExpression)~Quokka.RTL.Verilog.vlgCase">
            <summary>
            from vlgCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCaseItem.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.Verilog.vlgCaseItem">
            <summary>
            from vlgCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCaseItem.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgCaseItem">
            <summary>
            from vlgCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCaseItem.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgCaseItem">
            <summary>
            from vlgCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCaseStatement.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vlgBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCaseStatement.#ctor(Quokka.RTL.Verilog.vlgIdentifier)">
            <summary>
            from vlgIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="P:Quokka.RTL.Verilog.vlgCaseStatement.Conditions">
             <summary>
             vlgBinaryValueExpression
            
             vlgIdentifierExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCaseStatement.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.Verilog.vlgCaseStatement">
            <summary>
            from vlgCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCaseStatement.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgCaseStatement">
            <summary>
            from vlgCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCaseStatement.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgCaseStatement">
            <summary>
            from vlgCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCombBlock.#ctor(System.String,System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgRange})">
            <summary>
            from vlgIdentifier
            </summary>
            <param name="Name"></param>
            <param name="Indexes"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCombBlock.#ctor(System.String)">
            <summary>
            from vlgIdentifier
            </summary>
            <param name="Name"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCombBlock.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgCombBlock">
            <summary>
            from vlgCombBlock
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgCombBlock.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgCombBlock">
            <summary>
            from vlgCombBlock
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgExpression})">
            <summary>
            from vlgAggregateExpression
            </summary>
            <param name="Expressions"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgIdentifier,Quokka.RTL.Verilog.vlgAssignType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Expression"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vlgBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgCompareType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgIdentifier)">
            <summary>
            from vlgIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgLogicType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgMathType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgProcedureCall)">
            <summary>
            from vlgProcedureCallExpression
            </summary>
            <param name="Call"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgShiftType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgExpression})">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
            <param name="Expressions"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(System.Int32)">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgTernaryExpression
            </summary>
            <param name="Condition"></param>
            <param name="Lhs"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.#ctor(Quokka.RTL.Verilog.vlgUnaryType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgAggregateExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgAssignExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgBinaryValueExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgCompareExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgIdentifierExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgLogicExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgMathExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCallExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCall)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgShiftExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgSizedAggregateExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(System.Int32)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgTernaryExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgConditionalStatement.op_Implicit(Quokka.RTL.Verilog.vlgUnaryExpression)~Quokka.RTL.Verilog.vlgConditionalStatement">
            <summary>
            from vlgConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgExpression.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.Verilog.vlgExpression">
            <summary>
            from vlgBinaryValueExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgExpression.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgExpression">
            <summary>
            from vlgIdentifierExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgExpression.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgExpression">
            <summary>
            from vlgIdentifierExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgExpression.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCall)~Quokka.RTL.Verilog.vlgExpression">
            <summary>
            from vlgProcedureCallExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgExpression.op_Implicit(System.Int32)~Quokka.RTL.Verilog.vlgExpression">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgFileChild">
            <summary>
            vlgComment
            vlgText
            vlgModule
            vlgAttribute
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgForLoopChild">
            <summary>
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgGenerate.op_Implicit(Quokka.RTL.Verilog.vlgGenericBlock)~Quokka.RTL.Verilog.vlgGenerate">
            <summary>
            from vlgGenerate
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgGenericBlockChild">
            <summary>
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgGenvar.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgGenvar">
            <summary>
            from vlgGenvar
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgIdentifier.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgIdentifier">
            <summary>
            from vlgIdentifier
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgIdentifierExpression.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgIdentifierExpression">
            <summary>
            from vlgIdentifierExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgIdentifierExpression.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgIdentifierExpression">
            <summary>
            from vlgIdentifierExpression
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgInitialChild">
            <summary>
            vlgComment
            vlgText
            vlgSimpleForLoop
            vlgAssign
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgInitial.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgInitial">
            <summary>
            from vlgInitial
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgIterator.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgIterator">
            <summary>
            from vlgIterator
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModule.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgModule">
            <summary>
            from vlgModule
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleImplementation.op_Implicit(Quokka.RTL.Verilog.vlgModuleImplementationBlock)~Quokka.RTL.Verilog.vlgModuleImplementation">
            <summary>
            from vlgModuleImplementation
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgModuleImplementationBlockChild">
            <summary>
            vlgLocalParamNameBinaryValue
            vlgLocalParamNameExplicitValue
            vlgStandardModulePortImplementation
            vlgCustomDeclaration
            vlgLogicSignal
            vlgMemoryBlock
            vlgInitial
            vlgIterator
            vlgCombBlock
            vlgSyncBlock
            vlgModuleImplementationBlock
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgModuleInstanceParametersChild">
            <summary>
            vlgModuleInstanceParameter
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgAggregateExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgAssignExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgBinaryValueExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgCompareExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgIdentifierExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgLogicExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgMathExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCallExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCall)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgShiftExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgSizedAggregateExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(System.Int32)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgTernaryExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstancePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgUnaryExpression)~Quokka.RTL.Verilog.vlgModuleInstancePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgModuleInstancePortMappingsChild">
            <summary>
            vlgComment
            vlgText
            vlgModuleInstanceNamedPortMapping
            vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgExpression})">
            <summary>
            from vlgAggregateExpression
            </summary>
            <param name="Expressions"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgIdentifier,Quokka.RTL.Verilog.vlgAssignType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Expression"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vlgBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgCompareType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgIdentifier)">
            <summary>
            from vlgIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgLogicType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgMathType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgProcedureCall)">
            <summary>
            from vlgProcedureCallExpression
            </summary>
            <param name="Call"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgShiftType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgExpression})">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
            <param name="Expressions"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(System.Int32)">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgTernaryExpression
            </summary>
            <param name="Condition"></param>
            <param name="Lhs"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.#ctor(Quokka.RTL.Verilog.vlgUnaryType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgAggregateExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgAssignExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgBinaryValueExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgCompareExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgIdentifierExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgIdentifier)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgLogicExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgMathExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCallExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCall)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgShiftExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgSizedAggregateExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(System.Int32)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgTernaryExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping.op_Implicit(Quokka.RTL.Verilog.vlgUnaryExpression)~Quokka.RTL.Verilog.vlgModuleInstanceSimplePortMapping">
            <summary>
            from vlgModuleInstanceSimplePortMapping
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgModuleInterfaceChild">
            <summary>
            vlgComment
            vlgText
            vlgPlaceholderModulePort
            vlgCustomModulePortDeclaration
            vlgStandardModulePortDeclaration
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgModuleParametersChild">
            <summary>
            vlgComment
            vlgText
            vlgModuleParameterDeclaration
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgModulePort.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgModulePort">
            <summary>
            from vlgPlaceholderModulePort
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgPlaceholderModulePort.op_Implicit(System.String)~Quokka.RTL.Verilog.vlgPlaceholderModulePort">
            <summary>
            from vlgPlaceholderModulePort
            </summary>
        </member>
        <member name="P:Quokka.RTL.Verilog.vlgProcedureCall.Parameters">
             <summary>
             vlgAggregateExpression
            
             vlgAssignExpression
            
             vlgBinaryValueExpression
            
             vlgCompareExpression
            
             vlgIdentifierExpression
            
             vlgLogicExpression
            
             vlgMathExpression
            
             vlgProcedureCallExpression
            
             vlgShiftExpression
            
             vlgSizedAggregateExpression
            
             vlgTernaryExpression
            
             vlgUnaryExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgProcedureCallExpression.op_Implicit(Quokka.RTL.Verilog.vlgProcedureCall)~Quokka.RTL.Verilog.vlgProcedureCallExpression">
            <summary>
            from vlgProcedureCallExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.Verilog.vlgIdentifier,Quokka.RTL.Verilog.vlgAssignType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Expression"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vlgBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgCompareType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.Verilog.vlgIdentifier)">
            <summary>
            from vlgIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgLogicType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgMathType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.Verilog.vlgProcedureCall)">
            <summary>
            from vlgProcedureCallExpression
            </summary>
            <param name="Call"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.Verilog.vlgExpression,Quokka.RTL.Verilog.vlgShiftType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Quokka.RTL.Verilog.vlgExpression})">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
            <param name="Expressions"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(System.Int32)">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
            <param name="Size"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.#ctor(Quokka.RTL.Verilog.vlgUnaryType,Quokka.RTL.Verilog.vlgExpression)">
            <summary>
            from vlgUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="P:Quokka.RTL.Verilog.vlgRange.Indexes">
             <summary>
             vlgAggregateExpression
            
             vlgAssignExpression
            
             vlgBinaryValueExpression
            
             vlgCompareExpression
            
             vlgIdentifierExpression
            
             vlgLogicExpression
            
             vlgMathExpression
            
             vlgProcedureCallExpression
            
             vlgShiftExpression
            
             vlgSizedAggregateExpression
            
             vlgTernaryExpression
            
             vlgUnaryExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgRange.op_Implicit(Quokka.RTL.Verilog.vlgExpression)~Quokka.RTL.Verilog.vlgRange">
            <summary>
            from vlgRange
            </summary>
        </member>
        <member name="T:Quokka.RTL.Verilog.vlgSimpleForLoopChild">
            <summary>
            </summary>
        </member>
        <member name="P:Quokka.RTL.Verilog.vlgSizedAggregateExpression.Expressions">
             <summary>
             vlgAggregateExpression
            
             vlgAssignExpression
            
             vlgBinaryValueExpression
            
             vlgCompareExpression
            
             vlgIdentifierExpression
            
             vlgLogicExpression
            
             vlgMathExpression
            
             vlgProcedureCallExpression
            
             vlgShiftExpression
            
             vlgSizedAggregateExpression
            
             vlgTernaryExpression
            
             vlgUnaryExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgSizedAggregateExpression.op_Implicit(System.Int32)~Quokka.RTL.Verilog.vlgSizedAggregateExpression">
            <summary>
            from vlgSizedAggregateExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgSyncBlock.#ctor(Quokka.RTL.Verilog.vlgEdgeType,Quokka.RTL.Verilog.vlgIdentifier)">
            <summary>
            from vlgSyncBlockSensitivityItem
            </summary>
            <param name="Edge"></param>
            <param name="Identifier"></param>
        </member>
        <member name="M:Quokka.RTL.Verilog.vlgSyncBlock.op_Implicit(Quokka.RTL.Verilog.vlgSyncBlockSensitivityItem)~Quokka.RTL.Verilog.vlgSyncBlock">
            <summary>
            from vlgSyncBlock
            </summary>
        </member>
        <member name="P:Quokka.RTL.VHDL.vhdAbstractCollection.Children">
             <summary>
             vhdAggregate
            
             vhdAggregateBitConnection
            
             vhdAggregateExpression
            
             vhdAggregateOthersConnection
            
             vhdAlias
            
             vhdArchitecture
            
             vhdArchitectureDeclarations
            
             vhdArchitectureImplementation
            
             vhdArchitectureImplementationBlock
            
             vhdArrayTypeDeclaration
            
             vhdAssignExpression
            
             vhdAttribute
            
             vhdBinaryValueExpression
            
             vhdCase
            
             vhdCaseStatement
            
             vhdCastExpression
            
             vhdCastResizeExpression
            
             vhdComment
            
             vhdCompareExpression
            
             vhdConditionalStatement
            
             vhdCustomDataType
            
             vhdCustomEntityPort
            
             vhdCustomNetType
            
             vhdDefaultDataType
            
             vhdDefaultNetType
            
             vhdDefaultSignal
            
             vhdEntity
            
             vhdEntityInstance
            
             vhdEntityInstanceGenericMappings
            
             vhdEntityInstanceNamedGenericMapping
            
             vhdEntityInstanceNamedPortMapping
            
             vhdEntityInstancePortMappings
            
             vhdEntityInterface
            
             vhdFile
            
             vhdGenericBlock
            
             vhdIdentifier
            
             vhdIdentifierExpression
            
             vhdIf
            
             vhdLibraryReference
            
             vhdLogicExpression
            
             vhdLogicSignal
            
             vhdMathExpression
            
             vhdNull
            
             vhdOthersExpression
            
             vhdParenthesizedExpression
            
             vhdPredefinedAttributeExpression
            
             vhdProcedureCall
            
             vhdProcedureCallExpression
            
             vhdProcess
            
             vhdProcessDeclarations
            
             vhdRange
            
             vhdResizeExpression
            
             vhdShiftExpression
            
             vhdSimpleForLoop
            
             vhdStandardEntityPort
            
             vhdSyncBlock
            
             vhdTernaryExpression
            
             vhdText
            
             vhdUnaryExpression
            
             vhdUse
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAbstractObject.op_Implicit(Quokka.RTL.VHDL.vhdDataType)~Quokka.RTL.VHDL.vhdAbstractObject">
            <summary>
            from vhdDefaultDataType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAbstractObject.op_Implicit(Quokka.RTL.VHDL.vhdNetType)~Quokka.RTL.VHDL.vhdAbstractObject">
            <summary>
            from vhdDefaultNetType
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdAggregateChild">
            <summary>
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateExpression.op_Implicit(Quokka.RTL.VHDL.vhdAggregate)~Quokka.RTL.VHDL.vhdAggregateExpression">
            <summary>
            from vhdAggregateExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdAggregate)">
            <summary>
            from vhdAggregateExpression
            </summary>
            <param name="Aggregate"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdAssignType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vhdBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastResizeExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdCompareType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdIdentifier)">
            <summary>
            from vhdIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdLogicType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdMathType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdPredefinedAttribute)">
            <summary>
            from vhdPredefinedAttributeExpression
            </summary>
            <param name="Source"></param>
            <param name="Attribute"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(System.String,System.Collections.Generic.IEnumerable{Quokka.RTL.VHDL.vhdExpression})">
            <summary>
            from vhdProcedureCallExpression
            </summary>
            <param name="Proc"></param>
            <param name="Parameters"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdResizeExpression
            </summary>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdShiftType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdTernaryExpression
            </summary>
            <param name="Condition"></param>
            <param name="Lhs"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.#ctor(Quokka.RTL.VHDL.vhdUnaryType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdAggregateExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdAggregate)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdAssignExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdBinaryValueExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdCastExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdCastResizeExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdCompareExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdIdentifierExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdIdentifier)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdLogicExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdMathExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdOthersExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdParenthesizedExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdPredefinedAttributeExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdProcedureCallExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdResizeExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdShiftExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdTernaryExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdAggregateOthersConnection.op_Implicit(Quokka.RTL.VHDL.vhdUnaryExpression)~Quokka.RTL.VHDL.vhdAggregateOthersConnection">
            <summary>
            from vhdAggregateOthersConnection
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdArchitectureDeclarationsChild">
            <summary>
            vhdComment
            vhdText
            vhdDefaultSignal
            vhdLogicSignal
            vhdArrayTypeDeclaration
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdArchitectureImplementation.op_Implicit(Quokka.RTL.VHDL.vhdArchitectureImplementationBlock)~Quokka.RTL.VHDL.vhdArchitectureImplementation">
            <summary>
            from vhdArchitectureImplementation
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdArchitectureImplementationBlockChild">
            <summary>
            vhdEntityInstance
            vhdGenericBlock
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdBinaryValueExpression.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.VHDL.vhdBinaryValueExpression">
            <summary>
            from vhdBinaryValueExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdAggregate)">
            <summary>
            from vhdAggregateExpression
            </summary>
            <param name="Aggregate"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdAssignType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vhdBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastResizeExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdCompareType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdIdentifier)">
            <summary>
            from vhdIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdLogicType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdMathType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdPredefinedAttribute)">
            <summary>
            from vhdPredefinedAttributeExpression
            </summary>
            <param name="Source"></param>
            <param name="Attribute"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(System.String,System.Collections.Generic.IEnumerable{Quokka.RTL.VHDL.vhdExpression})">
            <summary>
            from vhdProcedureCallExpression
            </summary>
            <param name="Proc"></param>
            <param name="Parameters"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdResizeExpression
            </summary>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdShiftType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdTernaryExpression
            </summary>
            <param name="Condition"></param>
            <param name="Lhs"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.#ctor(Quokka.RTL.VHDL.vhdUnaryType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdAggregateExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdAggregate)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdAssignExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdBinaryValueExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdCastExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdCastResizeExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdCompareExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdIdentifierExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdIdentifier)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdLogicExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdMathExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdOthersExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdParenthesizedExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdPredefinedAttributeExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdProcedureCallExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdResizeExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdShiftExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdTernaryExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCase.op_Implicit(Quokka.RTL.VHDL.vhdUnaryExpression)~Quokka.RTL.VHDL.vhdCase">
            <summary>
            from vhdCase
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdAggregate)">
            <summary>
            from vhdAggregateExpression
            </summary>
            <param name="Aggregate"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdAssignType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vhdBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastResizeExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdCompareType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdIdentifier)">
            <summary>
            from vhdIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdLogicType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdMathType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdPredefinedAttribute)">
            <summary>
            from vhdPredefinedAttributeExpression
            </summary>
            <param name="Source"></param>
            <param name="Attribute"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(System.String,System.Collections.Generic.IEnumerable{Quokka.RTL.VHDL.vhdExpression})">
            <summary>
            from vhdProcedureCallExpression
            </summary>
            <param name="Proc"></param>
            <param name="Parameters"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdResizeExpression
            </summary>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdShiftType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdTernaryExpression
            </summary>
            <param name="Condition"></param>
            <param name="Lhs"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.#ctor(Quokka.RTL.VHDL.vhdUnaryType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdAggregateExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdAggregate)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdAssignExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdBinaryValueExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdCastExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdCastResizeExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdCompareExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdIdentifierExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdIdentifier)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdLogicExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdMathExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdOthersExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdParenthesizedExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdPredefinedAttributeExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdProcedureCallExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdResizeExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdShiftExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdTernaryExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCaseStatement.op_Implicit(Quokka.RTL.VHDL.vhdUnaryExpression)~Quokka.RTL.VHDL.vhdCaseStatement">
            <summary>
            from vhdCaseStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdAggregate)">
            <summary>
            from vhdAggregateExpression
            </summary>
            <param name="Aggregate"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdAssignType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vhdBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastResizeExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdCompareType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdIdentifier)">
            <summary>
            from vhdIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdLogicType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdMathType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdPredefinedAttribute)">
            <summary>
            from vhdPredefinedAttributeExpression
            </summary>
            <param name="Source"></param>
            <param name="Attribute"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(System.String,System.Collections.Generic.IEnumerable{Quokka.RTL.VHDL.vhdExpression})">
            <summary>
            from vhdProcedureCallExpression
            </summary>
            <param name="Proc"></param>
            <param name="Parameters"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdResizeExpression
            </summary>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdShiftType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdTernaryExpression
            </summary>
            <param name="Condition"></param>
            <param name="Lhs"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.#ctor(Quokka.RTL.VHDL.vhdUnaryType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdAggregateExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdAggregate)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdAssignExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdBinaryValueExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdCastExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdCastResizeExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdCompareExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdIdentifierExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdIdentifier)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdLogicExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdMathExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdOthersExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdParenthesizedExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdPredefinedAttributeExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdProcedureCallExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdResizeExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdShiftExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdTernaryExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdConditionalStatement.op_Implicit(Quokka.RTL.VHDL.vhdUnaryExpression)~Quokka.RTL.VHDL.vhdConditionalStatement">
            <summary>
            from vhdConditionalStatement
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCustomDataType.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdCustomDataType">
            <summary>
            from vhdCustomDataType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdCustomNetType.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdCustomNetType">
            <summary>
            from vhdCustomNetType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdDataTypeSource.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdDataTypeSource">
            <summary>
            from vhdCustomDataType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdDataTypeSource.op_Implicit(Quokka.RTL.VHDL.vhdDataType)~Quokka.RTL.VHDL.vhdDataTypeSource">
            <summary>
            from vhdDefaultDataType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdDefaultDataType.op_Implicit(Quokka.RTL.VHDL.vhdDataType)~Quokka.RTL.VHDL.vhdDefaultDataType">
            <summary>
            from vhdDefaultDataType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdDefaultNetType.op_Implicit(Quokka.RTL.VHDL.vhdNetType)~Quokka.RTL.VHDL.vhdDefaultNetType">
            <summary>
            from vhdDefaultNetType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdEntity.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdEntity">
            <summary>
            from vhdEntity
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdEntityInstanceGenericMappingsChild">
            <summary>
            vhdComment
            vhdText
            vhdEntityInstanceNamedGenericMapping
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdEntityInstancePortMappingsChild">
            <summary>
            vhdComment
            vhdText
            vhdEntityInstanceNamedPortMapping
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdEntityInterfaceChild">
            <summary>
            vhdComment
            vhdText
            vhdCustomEntityPort
            vhdStandardEntityPort
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdExpression.op_Implicit(Quokka.RTL.VHDL.vhdAggregate)~Quokka.RTL.VHDL.vhdExpression">
            <summary>
            from vhdAggregateExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdExpression.op_Implicit(Quokka.RTL.RTLBitArray)~Quokka.RTL.VHDL.vhdExpression">
            <summary>
            from vhdBinaryValueExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdExpression.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdExpression">
            <summary>
            from vhdIdentifierExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdExpression.op_Implicit(Quokka.RTL.VHDL.vhdIdentifier)~Quokka.RTL.VHDL.vhdExpression">
            <summary>
            from vhdIdentifierExpression
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdFileChild">
            <summary>
            vhdComment
            vhdText
            vhdLibraryReference
            vhdUse
            vhdEntity
            vhdArchitecture
            vhdAttribute
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdGenericBlockChild">
            <summary>
            vhdGenericBlock
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdIdentifier.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdIdentifier">
            <summary>
            from vhdIdentifier
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdIdentifierExpression.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdIdentifierExpression">
            <summary>
            from vhdIdentifierExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdIdentifierExpression.op_Implicit(Quokka.RTL.VHDL.vhdIdentifier)~Quokka.RTL.VHDL.vhdIdentifierExpression">
            <summary>
            from vhdIdentifierExpression
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdLibraryReference.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdLibraryReference">
            <summary>
            from vhdLibraryReference
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdNetTypeSource.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdNetTypeSource">
            <summary>
            from vhdCustomNetType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdNetTypeSource.op_Implicit(Quokka.RTL.VHDL.vhdNetType)~Quokka.RTL.VHDL.vhdNetTypeSource">
            <summary>
            from vhdDefaultNetType
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdAggregate)">
            <summary>
            from vhdAggregateExpression
            </summary>
            <param name="Aggregate"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdAssignType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vhdBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastResizeExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdCompareType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdIdentifier)">
            <summary>
            from vhdIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdLogicType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdMathType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdPredefinedAttribute)">
            <summary>
            from vhdPredefinedAttributeExpression
            </summary>
            <param name="Source"></param>
            <param name="Attribute"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(System.String,System.Collections.Generic.IEnumerable{Quokka.RTL.VHDL.vhdExpression})">
            <summary>
            from vhdProcedureCallExpression
            </summary>
            <param name="Proc"></param>
            <param name="Parameters"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdResizeExpression
            </summary>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdShiftType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdTernaryExpression
            </summary>
            <param name="Condition"></param>
            <param name="Lhs"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdParenthesizedExpression.#ctor(Quokka.RTL.VHDL.vhdUnaryType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="P:Quokka.RTL.VHDL.vhdProcedureCall.Parameters">
             <summary>
             vhdAggregateExpression
            
             vhdAssignExpression
            
             vhdBinaryValueExpression
            
             vhdCastExpression
            
             vhdCastResizeExpression
            
             vhdCompareExpression
            
             vhdIdentifierExpression
            
             vhdLogicExpression
            
             vhdMathExpression
            
             vhdOthersExpression
            
             vhdParenthesizedExpression
            
             vhdPredefinedAttributeExpression
            
             vhdProcedureCallExpression
            
             vhdResizeExpression
            
             vhdShiftExpression
            
             vhdTernaryExpression
            
             vhdUnaryExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdProcedureCall.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdProcedureCall">
            <summary>
            from vhdProcedureCall
            </summary>
        </member>
        <member name="P:Quokka.RTL.VHDL.vhdProcedureCallExpression.Parameters">
             <summary>
             vhdAggregateExpression
            
             vhdAssignExpression
            
             vhdBinaryValueExpression
            
             vhdCastExpression
            
             vhdCastResizeExpression
            
             vhdCompareExpression
            
             vhdIdentifierExpression
            
             vhdLogicExpression
            
             vhdMathExpression
            
             vhdOthersExpression
            
             vhdParenthesizedExpression
            
             vhdPredefinedAttributeExpression
            
             vhdProcedureCallExpression
            
             vhdResizeExpression
            
             vhdShiftExpression
            
             vhdTernaryExpression
            
             vhdUnaryExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdProcess.#ctor(System.String,System.Collections.Generic.IEnumerable{Quokka.RTL.VHDL.vhdRange})">
            <summary>
            from vhdIdentifier
            </summary>
            <param name="Name"></param>
            <param name="Indexes"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdProcess.#ctor(System.String)">
            <summary>
            from vhdIdentifier
            </summary>
            <param name="Name"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdProcess.op_Implicit(Quokka.RTL.VHDL.vhdIdentifier)~Quokka.RTL.VHDL.vhdProcess">
            <summary>
            from vhdProcess
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdProcess.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdProcess">
            <summary>
            from vhdProcess
            </summary>
        </member>
        <member name="T:Quokka.RTL.VHDL.vhdProcessDeclarationsChild">
            <summary>
            vhdComment
            vhdText
            vhdDefaultSignal
            vhdLogicSignal
            vhdArrayTypeDeclaration
            vhdAlias
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdAggregate)">
            <summary>
            from vhdAggregateExpression
            </summary>
            <param name="Aggregate"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdAssignType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdAssignExpression
            </summary>
            <param name="Target"></param>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.RTLBitArray)">
            <summary>
            from vhdBinaryValueExpression
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdCastType,Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCastResizeExpression
            </summary>
            <param name="Type"></param>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdCompareType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdCompareExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdIdentifier)">
            <summary>
            from vhdIdentifierExpression
            </summary>
            <param name="Source"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdLogicType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdLogicExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdMathType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdMathExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdPredefinedAttribute)">
            <summary>
            from vhdPredefinedAttributeExpression
            </summary>
            <param name="Source"></param>
            <param name="Attribute"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(System.String,System.Collections.Generic.IEnumerable{Quokka.RTL.VHDL.vhdExpression})">
            <summary>
            from vhdProcedureCallExpression
            </summary>
            <param name="Proc"></param>
            <param name="Parameters"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdExpression,Quokka.RTL.VHDL.vhdShiftType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdShiftExpression
            </summary>
            <param name="Lhs"></param>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.#ctor(Quokka.RTL.VHDL.vhdUnaryType,Quokka.RTL.VHDL.vhdExpression)">
            <summary>
            from vhdUnaryExpression
            </summary>
            <param name="Type"></param>
            <param name="Rhs"></param>
        </member>
        <member name="P:Quokka.RTL.VHDL.vhdRange.Indexes">
             <summary>
             vhdAggregateExpression
            
             vhdAssignExpression
            
             vhdBinaryValueExpression
            
             vhdCastExpression
            
             vhdCastResizeExpression
            
             vhdCompareExpression
            
             vhdIdentifierExpression
            
             vhdLogicExpression
            
             vhdMathExpression
            
             vhdOthersExpression
            
             vhdParenthesizedExpression
            
             vhdPredefinedAttributeExpression
            
             vhdProcedureCallExpression
            
             vhdResizeExpression
            
             vhdShiftExpression
            
             vhdTernaryExpression
            
             vhdUnaryExpression
            
             </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdRange.op_Implicit(Quokka.RTL.VHDL.vhdExpression)~Quokka.RTL.VHDL.vhdRange">
            <summary>
            from vhdRange
            </summary>
        </member>
        <member name="M:Quokka.RTL.VHDL.vhdUse.op_Implicit(System.String)~Quokka.RTL.VHDL.vhdUse">
            <summary>
            from vhdUse
            </summary>
        </member>
    </members>
</doc>
